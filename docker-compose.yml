name: 'rgfly-v1'
networks:
    internal:
services:
    tmp:
        image: busybox
        command: chmod -R 777 /tmp/docker
        volumes:
            - /tmp/docker/  
    nginx:
        image: nginx:stable-alpine
        container_name: nginx
        ports:
            - 80:80
        restart: unless-stopped
        volumes:
            - ./dev:/var/www
            - ./config/nginx-server/nginx.conf:/etc/nginx/nginx.conf
            - ./config/nginx:/etc/nginx/conf.d
            - ./logs/nginx:/var/log/nginx/
        depends_on:
            - php
        networks:
            - internal
    redis:
        image: redis
        command: redis-server /etc/redis.conf
        container_name: redis
        restart: unless-stopped
        volumes:
            - ./config/redis/redis.conf:/etc/redis.conf
            - ./database/redis:/data
        volumes_from:
            - tmp
    nodejs:
        container_name: node-notifications
        build:
            context: ./config/node
            dockerfile: Dockerfile
        ports:
            - 8443:8443
        restart: unless-stopped
        volumes:
            - ./dev:/var/www
            - ./dev/project/nodejs:/var/www/project/nodejs
            - ./config/node/package.json:/var/www/project/nodejs/package.json
        networks:
            - internal
        depends_on:
            - redis
        volumes_from:
            - tmp
    elasticsearch:
        image: elasticsearch:8.8.0  
        container_name: elasticsearch
        restart: unless-stopped
        ports:
            - 9200:9200
        environment:
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - xpack.security.enabled=false
        volumes:
            - ./config/elastic/node-single.yml:/usr/share/elasticsearch/config/elasticsearch.yml
            - ./database/elastic:/var/lib/elasticsearch/data
            - ./logs/elastic/node_0:/usr/share/elasticsearch/logs
        depends_on:
            - php
            - postgres         
        networks:
            - internal        
    php:
        image: php:8.3
        build:
            context: ./config/php
            dockerfile: Dockerfile
        container_name: php            
        depends_on:
            - redis
            - postgres
        volumes:
          - ./dev:/var/www
          - ./config/php/php.ini:/usr/local/etc/php/php.ini
          - ./config/supervisor/supervisord.conf:/etc/supervisor/supervisord.conf
          - ./logs/supervisor:/var/log/supervisor/
        ports:
          - "9000:9000"
        networks:
          - internal
        command: ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]
        volumes_from:
            - tmp
    postgres:
        image: postgres:latest
        container_name: postgres
        command: "postgres -c fsync=off -c full_page_writes=off -c synchronous_commit=OFF"
        restart: on-failure
        ports:
            - "5432:5432"
        volumes:
            - ./database/postgres:/data/postgres
        networks:
            - internal 
        environment:
            POSTGRES_HOST: localhost   
            POSTGRES_HOST_AUTH_METHOD: trust
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            PGDATA : /data/postgres